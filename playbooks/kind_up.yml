---
- name: Ensure KinD cluster is present
  hosts: targets
  become: true
  gather_facts: false
  vars_files:
    - ../group_vars/all/kind.yml
  vars:
    kubeconfig_path: "{{ playbook_dir }}/../.kube/kind-{{ cluster_name }}.yaml"

  tasks:
    - name: Ensure curl present
      ansible.builtin.package:
        name: curl
        state: present

    - name: Check for kind binary
      ansible.builtin.stat:
        path: "{{ kind_bin }}"
      register: kind_stat

    - name: Install kind ({{ kind_version }}) if missing
      ansible.builtin.get_url:
        url: "{{ kind_download_url }}"
        dest: "{{ kind_bin }}"
        mode: '0755'
      when: not kind_stat.stat.exists

    - name: Render KinD cluster config
      ansible.builtin.template:
        src: "../files/kind/cluster.yaml.j2"
        dest: "/tmp/kind-{{ cluster_name }}.yaml"
        mode: '0644'

    - name: Check existing clusters
      ansible.builtin.command: "{{ kind_bin }} get clusters"
      register: clusters
      changed_when: false
      failed_when: false

    - name: Create cluster if absent
      ansible.builtin.command: >
        {{ kind_bin }} create cluster
        --name {{ cluster_name }}
        --image {{ kind_node_image }}
        --config /tmp/kind-{{ cluster_name }}.yaml
      when: clusters.rc != 0 or (cluster_name not in (clusters.stdout | default('')))

    - name: Ensure .kube dir inside project
      become: false
      ansible.builtin.file:
        path: "{{ playbook_dir }}/../.kube"
        state: directory
        mode: '0700'

    - name: Export kubeconfig for this cluster
      become: false
      ansible.builtin.command: "{{ kind_bin }} get kubeconfig --name {{ cluster_name }}"
      register: kc
      changed_when: false

    - name: Write kubeconfig file (project-local)
      become: false
      ansible.builtin.copy:
        dest: "{{ kubeconfig_path }}"
        mode: '0600'
        content: "{{ kc.stdout }}"

    - name: Show how to use kubeconfig
      become: false
      ansible.builtin.debug:
        msg: |
          Cluster is up! To use it, run:
            export KUBECONFIG={{ kubeconfig_path }}
